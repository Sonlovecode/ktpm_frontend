import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from '../context/auth';

const OrderPage = () => {
    const location = useLocation();
    const navigate = useNavigate();
    const { cartItems = [] } = location.state || {};  // L·∫•y gi·ªè h√†ng t·ª´ state ho·∫∑c m·∫∑c ƒë·ªãnh []
    const [auth] = useAuth();
    const [showLoginAlert, setShowLoginAlert] = useState(false);  // Qu·∫£n l√Ω vi·ªác hi·ªÉn th·ªã th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p

    useEffect(() => {
        // Ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p khi ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p
        if (!auth?.user) {
            setShowLoginAlert(true);
        }
    }, [auth]); // Ch·∫°y effect n√†y khi auth thay ƒë·ªïi

    // ƒê·ªãnh d·∫°ng gi√° ti·ªÅn
    const formatPrice = (price) =>
        new Intl.NumberFormat("vi-VN", {
            style: "currency",
            currency: "VND",
        }).format(price);

    // T√≠nh t·ªïng ti·ªÅn c·ªßa gi·ªè h√†ng
    const totalPrice = cartItems.reduce(
        (total, item) => total + item.price * item.quantity,
        0
    );

    // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ context
    const { name, email, phone, address } = auth?.user || {};

    // X·ª≠ l√Ω x√°c nh·∫≠n ƒë∆°n h√†ng
    const handleConfirmOrder = () => {
        if (!auth?.user) {
            setShowLoginAlert(true);  // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
            return;
        }

        const newOrder = {
            id: Date.now(),
            user: auth.user,
            items: cartItems,
            total: totalPrice,
            createdAt: new Date().toISOString(),
        };

        // L·∫•y ƒë∆°n h√†ng ƒë√£ l∆∞u trong localStorage ho·∫∑c t·∫°o m·ªõi n·∫øu ch∆∞a c√≥
        const existingOrders = JSON.parse(localStorage.getItem("orders")) || [];
        existingOrders.push(newOrder);

        // L∆∞u ƒë∆°n h√†ng v√†o localStorage
        localStorage.setItem("orders", JSON.stringify(existingOrders));

        // Th√¥ng b√°o v√† chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang l·ªãch s·ª≠ ƒë∆°n h√†ng
        alert("‚úÖ ƒê·∫∑t h√†ng th√†nh c√¥ng!");
        navigate("/order-history"); // Chuy·ªÉn ƒë·∫øn trang l·ªãch s·ª≠ ƒë∆°n h√†ng sau khi ƒë·∫∑t h√†ng th√†nh c√¥ng
    };

    return (
        <div className="container my-5">
            <h2 className="mb-4">üì¶ Th√¥ng tin ƒë∆°n h√†ng</h2>

            {/* Th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p */}
            {showLoginAlert && (
                <div className="alert alert-danger mb-4">
                    B·∫°n c·∫ßn <strong>ƒëƒÉng nh·∫≠p</strong> ƒë·ªÉ ƒë·∫∑t h√†ng. 
                    <button className="btn btn-primary ms-2" onClick={() => navigate("/login")}>ƒêƒÉng nh·∫≠p ngay</button>
                </div>
            )}

            {/* Th√¥ng tin kh√°ch h√†ng */}
            <div className="mb-4 p-3 border rounded bg-light">
                <h5>üë§ Th√¥ng tin kh√°ch h√†ng</h5>
                <p><strong>H·ªç t√™n:</strong> {name || "Ch∆∞a cung c·∫•p"}</p>
                <p><strong>Email:</strong> {email || "Ch∆∞a cung c·∫•p"}</p>
                <p><strong>ƒêi·ªán tho·∫°i:</strong> {phone || "Ch∆∞a cung c·∫•p"}</p>
                <p><strong>ƒê·ªãa ch·ªâ:</strong> {address || "Ch∆∞a cung c·∫•p"}</p>
            </div>

            {/* Danh s√°ch s·∫£n ph·∫©m */}
            {cartItems.length === 0 ? (
                <div className="alert alert-warning">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong ƒë∆°n h√†ng.</div>
            ) : (
                <>
                    {cartItems.map((item, index) => (
                        <div
                            key={index}
                            className="d-flex align-items-center border rounded p-3 mb-3 shadow-sm"
                        >
                            <img
                                src={item.image}
                                alt={item.name}
                                style={{
                                    width: '100px',
                                    height: '100px',
                                    objectFit: 'cover',
                                    marginRight: '20px',
                                }}
                            />
                            <div className="flex-grow-1">
                                <h5 className="mb-1">{item.name}</h5>
                                <p className="mb-1">S·ªë l∆∞·ª£ng: {item.quantity}</p>
                                <p className="mb-0 text-danger fw-bold">
                                    ƒê∆°n gi√°: {formatPrice(item.price)}
                                </p>
                                <p className="mb-0">
                                    Th√†nh ti·ªÅn: {formatPrice(item.price * item.quantity)}
                                </p>
                            </div>
                        </div>
                    ))}

                    {/* T·ªïng ti·ªÅn + n√∫t x√°c nh·∫≠n */}
                    <div className="text-end mt-4 p-3 border-top">
                        <h5 className="text-primary">T·ªïng ti·ªÅn: {formatPrice(totalPrice)}</h5>
                        <button className="btn btn-success mt-3" onClick={handleConfirmOrder}>
                            ‚úÖ X√°c nh·∫≠n ƒë·∫∑t h√†ng
                        </button>
                    </div>
                </>
            )}
        </div>
    );
};

export default OrderPage;
