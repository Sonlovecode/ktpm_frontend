// src/pages/AdminDashboard.js
import React, { useState, useEffect } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../context/auth';
import { adminAPI,  } from '../api'; // Import c√°c API c·∫ßn thi·∫øt
const API_URL = 'http://localhost:3000';

import '../styles/AdminDashboard.css';
import axios from 'axios';

const AdminDashboard = () => {
  const [auth] = useAuth();
  const navigate = useNavigate();
  const location = useLocation();
  const [countUsers, setCountUsers] = useState(0);
  
  // X√°c ƒë·ªãnh menu item n√†o ƒëang active d·ª±a tr√™n ƒë∆∞·ªùng d·∫´n hi·ªán t·∫°i
  const [activeMenu, setActiveMenu] = useState('dashboard');
  
  // Th√™m state cho d·ªØ li·ªáu dashboard
  const [dashboardStats, setDashboardStats] = useState({
    users: { total: 0, newCount: 0 },
    products: { total: 0, newCount: 0 },
    orders: { total: 0, newCount: 0 },
    revenue: { total: 0, newAmount: 0 }
  });
  
  // Th√™m state cho ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
  const [recentActivities, setRecentActivities] = useState([]);
  
  // Th√™m state cho loading
  const [loading, setLoading] = useState(true);
  
  useEffect(() => {
    if (!auth?.user) {
      // n·∫øu kh√¥ng c√≥ user, ƒëi·ªÅu h∆∞·ªõng v·ªÅ login
      navigate('/login');
    } else {
      // Ch·ªâ t·∫£i d·ªØ li·ªáu khi ƒë√£ ƒëƒÉng nh·∫≠p
      fetchDashboardData();
    }

    
    // C·∫≠p nh·∫≠t active menu d·ª±a tr√™n path
    const path = location.pathname;
    if (path.includes('/admin/users')) {
      setActiveMenu('users');
    } else if (path.includes('/admin/products')) {
      setActiveMenu('products');
    } else if (path.includes('/admin/orders')) {
      setActiveMenu('orders');
    } else {
      setActiveMenu('dashboard');
    }
  }, [auth, navigate, location]);
  

  
  useEffect(() => {
    const getSoLuongUsers = async () => {
        try {
            const response = await axios.get(`${API_URL}/api/v1/users/count`);
            setCountUsers(response.data)
        } catch (error) {
            console.log('L·ªñi kh√¥ng th·ªÉ l·∫•y s·ªë l∆∞·ª£ng users', error)
        }
    };
    getSoLuongUsers();
}, [])
  
  // H√†m ƒë·ªÉ t·∫£i d·ªØ li·ªáu dashboard
  const fetchDashboardData = async () => {
    try {
      setLoading(true);
      // G·ªçi API ƒë·ªÉ l·∫•y th·ªëng k√™ dashboard
      const response = await adminAPI.getDashboardStats();
      if (response.data) {
        setDashboardStats({
          users: { 
            total: response.data.userStats.total || 0, 
            newCount: response.data.userStats.newThisWeek || 0 
          },
          products: { 
            total: response.data.productStats.total || 0, 
            newCount: response.data.productStats.newThisWeek || 0 
          },
          orders: { 
            total: response.data.orderStats.total || 0, 
            newCount: response.data.orderStats.newThisWeek || 0 
          },
          revenue: { 
            total: response.data.revenueStats.total || 0, 
            newAmount: response.data.revenueStats.thisWeek || 0 
          }
        });
        
        // C·∫≠p nh·∫≠t ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
        if (response.data.recentActivities) {
          setRecentActivities(response.data.recentActivities);
        }
      }
    } catch (error) {
      console.error("L·ªói khi t·∫£i d·ªØ li·ªáu dashboard:", error);
    } finally {
      setLoading(false);
    }
  };
  
  if (!auth?.user) {
    return <p style={{ padding: 20 }}>Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ truy c·∫≠p trang admin.</p>;
  }
  
  
  // H√†m ƒë·ªãnh d·∫°ng s·ªë ti·ªÅn
  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN').format(amount) + ' VND';
  };
  
  return (
        
    <div className="admin-container">
      <div className="main-content">
        <div className="top-bar">
          <div>
            <i className="search-icon">üîç</i>
            <i className="refresh-icon" onClick={fetchDashboardData}>‚ôªÔ∏è</i>
          </div>
          <div className="user-profile">
            <div className="user-avatar">{auth?.user?.name?.charAt(0) || 'U'}</div>
            <span>{auth?.user?.name || 'User'}</span>
          </div>
        </div>
        
        <div className="title-bar">
          <h2 className="title-text">
            {activeMenu === 'dashboard' && 'B·∫£ng ƒêi·ªÅu Khi·ªÉn'}
            {activeMenu === 'users' && 'Qu·∫£n L√Ω Ng∆∞·ªùi D√πng'}
            {activeMenu === 'products' && 'Qu·∫£n L√Ω S·∫£n Ph·∫©m'}
            {activeMenu === 'orders' && 'Qu·∫£n L√Ω ƒê∆°n H√†ng'}
          </h2>
        </div>
        
        <div className="content-area">
          {loading && activeMenu === 'dashboard' ? (
            <div className="loading-indicator">ƒêang t·∫£i d·ªØ li·ªáu...</div>
          ) : (
            <>
              {activeMenu === 'dashboard' && (
                <div className="dashboard-stats">
                  <div className="stat-card">
                    <h3>Ng∆∞·ªùi d√πng</h3>
                    <p className="stat-number">{dashboardStats.users.total}</p>
                    <p className="stat-info">+({countUsers.User}) tu·∫ßn n√†y</p>
                    <p className="stat-info">+{dashboardStats.users.newCount} tu·∫ßn n√†y</p>
                  </div>
                  
                  <div className="stat-card">
                    <h3>S·∫£n ph·∫©m</h3>
                    <p className="stat-number">{dashboardStats.products.total}</p>
                    <p className="stat-info">+{dashboardStats.products.newCount} tu·∫ßn n√†y</p>
                  </div>
                  
                  <div className="stat-card">
                    <h3>ƒê∆°n h√†ng</h3>
                    <p className="stat-number">{dashboardStats.orders.total}</p>
                    <p className="stat-info">+{dashboardStats.orders.newCount} tu·∫ßn n√†y</p>
                  </div>
                  
                  <div className="stat-card">
                    <h3>Doanh thu</h3>
                    <p className="stat-number">{formatCurrency(dashboardStats.revenue.total)}</p>
                    <p className="stat-info">+{formatCurrency(dashboardStats.revenue.newAmount)} tu·∫ßn n√†y</p>
                  </div>
                </div>
              )}
              
              {activeMenu === 'dashboard' && (
                <div className="recent-activity">
                  <h3>Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
                  {recentActivities.length > 0 ? (
                    <ul className="activity-list">
                      {recentActivities.map((activity, index) => (
                        <li key={index}>
                          <span className="activity-time">{activity.time}</span>
                          <span className="activity-text">{activity.description}</span>
                        </li>
                      ))}
                    </ul>
                  ) : (
                    <p className="no-activity">Kh√¥ng c√≥ ho·∫°t ƒë·ªông n√†o g·∫ßn ƒë√¢y</p>
                  )}
                </div>
              )}
            </>
          )}
          
          {/* C√°c ph·∫ßn n·ªôi dung cho c√°c menu kh√°c s·∫Ω ƒë∆∞·ª£c render ·ªü ƒë√¢y th√¥ng qua React Router */}
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard;